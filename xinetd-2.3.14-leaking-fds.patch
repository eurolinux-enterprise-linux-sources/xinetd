--- xinetd-2.3.14-dist/xinetd/service.c	2012-07-20 14:28:24.013566686 +0200
+++ xinetd-2.3.14-new/xinetd/service.c	2012-07-20 14:30:05.449614585 +0200
@@ -88,6 +88,7 @@ struct service *svc_new( struct service_
    CLEAR( *sp ) ;
 
    SVC_CONF(sp) = scp ;
+   sp->svc_pfd_index = -1;
    return( sp ) ;
 }
 
@@ -346,7 +347,16 @@ status_e svc_activate( struct service *s
      memset(&ps.rws.pfd_array[ps.rws.pfds_last], 0, (ps.rws.pfds_allocated-
        ps.rws.pfds_last)*sizeof(struct pollfd));
    }
-   SVC_POLLFD( sp ) = &ps.rws.pfd_array[ps.rws.pfds_last++] ;
+   if ( sp->svc_pfd_index >= 0 )
+   {
+     SVC_POLLFD( sp ) = &ps.rws.pfd_array[sp->svc_pfd_index] ;
+   }
+   else
+   {
+     sp->svc_pfd_index = ps.rws.pfds_last ;
+     SVC_POLLFD( sp ) = &ps.rws.pfd_array[ps.rws.pfds_last++] ;
+   }
+
 #endif /* HAVE_POLL */
 
    if( SC_IPV4( scp ) ) {
@@ -433,6 +443,11 @@ status_e svc_activate( struct service *s
 static void deactivate( const struct service *sp )
 {
    (void) Sclose( SVC_FD( sp ) ) ;
+#ifdef HAVE_POLL
+   SVC_FD( sp ) = 0;
+#else      
+   FD_CLR( SVC_FD( sp ), &ps.rws.socket_mask ) ;
+#endif
 
 #ifdef HAVE_MDNS
    xinetd_mdns_deregister(SVC_CONF(sp));
--- xinetd-2.3.14-dist/xinetd/service.h	2012-07-20 14:28:23.924566644 +0200
+++ xinetd-2.3.14-new/xinetd/service.h	2012-07-20 14:30:05.450614586 +0200
@@ -47,6 +47,7 @@ struct service
 {
    state_e                svc_state ;
    int                    svc_ref_count ;   /* # of pters to this struct */
+   int                    svc_pfd_index;    /* index of pfd in pfd_array */
    struct service_config *svc_conf ;    /* service configuration */
 
 #ifdef HAVE_POLL
